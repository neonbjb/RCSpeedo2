package com.appliedanalog.rcspeedo.fragments;import android.content.SharedPreferences;import android.content.SharedPreferences.OnSharedPreferenceChangeListener;import android.os.Bundle;import android.preference.CheckBoxPreference;import android.preference.EditTextPreference;import android.preference.PreferenceActivity;import android.preference.PreferenceManager;import android.util.Log;import android.widget.Toast;import com.appliedanalog.rcspeedo.R;import com.appliedanalog.rcspeedo.controllers.Strings;import com.appliedanalog.rcspeedo.controllers.data.UnitManager;public class Settings extends PreferenceActivity implements OnSharedPreferenceChangeListener {	final String TAG = "Settings";		public static final String ENABLE_GPS_KEY = "enable_gps";	public static final String HARD_TEMP_KEY = "hard_temp";			public static final String TEMP_UNIT_KEY = "temperature_unit";		public static final String SPEED_UNIT_KEY = "speed_unit";		private CheckBoxPreference cbEnableGPS;	private EditTextPreference tHardTemp;	Strings s;	/** Called when the activity is first created. */	@Override	public void onCreate(Bundle savedInstanceState) {	    super.onCreate(savedInstanceState);	    s = Strings.getInstance();	    	    addPreferencesFromResource(R.xml.settings);	    cbEnableGPS = (CheckBoxPreference)getPreferenceScreen().findPreference(ENABLE_GPS_KEY);	    tHardTemp = (EditTextPreference)getPreferenceScreen().findPreference(HARD_TEMP_KEY);	}		@Override	public void onResume(){		super.onResume();			    //The 'hard temp', manually set by the user, should be editable in their selected temperature unit of choice, make that	    //conversion in the prefs here. We will back convert when the prefs are saved in RCSpeedo.	    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);	    SharedPreferences.Editor ed = prefs.edit();	    double htemp = Double.parseDouble(prefs.getString(HARD_TEMP_KEY, "0"));	    ed.putString(HARD_TEMP_KEY, Double.toString(UnitManager.getInstance().getRawTemperature(htemp)));	    ed.commit();	    Log.v(TAG, "Settings.onStart() converting hard temp from " + htemp + " to " + UnitManager.getInstance().getRawTemperature(htemp));		getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);	}	@Override	public void onPause(){		super.onPause();		getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);				//back convert hard temp into system temperature	    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);	    SharedPreferences.Editor ed = prefs.edit();	    double htemp = Double.parseDouble(prefs.getString(HARD_TEMP_KEY, "0"));	    ed.putString(HARD_TEMP_KEY, Double.toString(UnitManager.getInstance().getBaseTemp(htemp)));	    ed.commit();	    	    Log.v(TAG, "Settings.onStop() converting hard temp from " + htemp + " to " + UnitManager.getInstance().getBaseTemp(htemp));	}	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {		if(key.equals(TEMP_UNIT_KEY)){			//We need to convert the hard temperature into the new unit..			String tuName = sharedPreferences.getString(TEMP_UNIT_KEY, null);			if(tuName == null) return;			UnitManager uMan = UnitManager.getInstance();			double htemp = (int)Double.parseDouble(sharedPreferences.getString(HARD_TEMP_KEY, "0."));			Log.v(TAG, "Starting conversion from " + htemp + " in " + uMan.getTemperature(0));			htemp = uMan.getBaseTemp(htemp);			Log.v(TAG, "Base unit: " + htemp + " to the unit: " + tuName);			htemp = uMan.getTempUnit(tuName).doConversion(htemp);			Log.v(TAG, " Result: " + htemp);						//Apply this new temp to the shared prefs, unregister the pref listener so it doesnt affect things.			getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);			SharedPreferences.Editor ed = sharedPreferences.edit();			ed.putString(HARD_TEMP_KEY, Integer.toString((int)htemp));			ed.commit();			getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);						tHardTemp.setText(Integer.toString((int)htemp));		}		if(key.equals(HARD_TEMP_KEY)){			try{				//do a parse to make sure the new temp setting is valid.				Double.parseDouble(sharedPreferences.getString(HARD_TEMP_KEY, "err"));			}catch(Exception e){				Toast toast = Toast.makeText(getApplicationContext(), s.ERR_TEMP_NOT_NUMBER, Toast.LENGTH_SHORT);				toast.show();				return;			}			cbEnableGPS.setChecked(false);		}		if(key.equals(TEMP_UNIT_KEY) || key.equals(SPEED_UNIT_KEY)){			UnitManager.getInstance().loadFromPreferences(sharedPreferences);		}	}}